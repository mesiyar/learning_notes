# 1.生成服务器端私钥
openssl genrsa -out server.key 1024
# 2.生成服务器端公钥
openssl rsa -in server.key -pubout -out server.pem
# 3.生成 CA 私钥
openssl genrsa `~-out ca.key 1024
openssl req -new -key ca.key -out ca.csr
openssl x509 -req -in ca.csr -signkey ca.key -out ca.crt
# 4.服务器端需要向 CA 机构申请签名证书，在申请签名证书之前依然是创建自己的 CSR 文件
openssl req -new -key server.key -out server.csr
# 5.向自己的 CA 机构申请证书，签名过程需要 CA 的证书和私钥参与，最终颁发一个带有 CA 签名的证书
openssl x509 -req -CA ca.crt -CAkey ca.key -CAcreateserial -in server.csr -out server.crt
# 6.使用openssl 进行转换
openssl x509 -in server.crt -out server.cer -outform der

# nginx https 服务器配置 仅供参考

server {
    charset utf-8;
    client_max_body_size 128M;

    listen 8443;    
    ssl off; # 如果打开 请求的时候会出现 400 The plain HTTP request was sent to HTTPS port

    server_name  www.office.com;
    root         /Users/eddie/Documents/office/backend/web;
    index        index.php;

    ssl_certificate /Users/eddie/cret/server.crt;#证书地址
    ssl_certificate_key /Users/eddie/cret/server.key;#证书私钥

    location / {
        try_files $uri $uri/ /index.php$is_args$args;
    }
    
    location ~ \.php$ {
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_pass 127.0.0.1:9000;
        #fastcgi_pass unix:/var/run/php5-fpm.sock;
        try_files $uri =404;
    }

    location ~* /\. {
        deny all;
    }
}
